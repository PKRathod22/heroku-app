buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.4.1.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: 'eclipse-wtp'

jar {
    baseName = 'heroku-pk-app'
    version =  '0.0.1'
}

 repositories {
      jcenter()
      flatDir {
        dirs 'libs'
      }
   }

sourceCompatibility = 1.8
targetCompatibility = 1.8

configurations {
	providedRuntime
}

dependencies {

	//compile fileTree(include: ['*.jar'], dir: 'libs')
	compile('org.springframework.boot:spring-boot-starter-amqp')
	compile('org.springframework.boot:spring-boot-starter-data-jpa')

	compile('org.apache.commons:commons-lang3:3.4')
	compile('org.apache.commons:commons-dbcp2:2.1.1')
	    
	compile("org.postgresql:postgresql:9.3-1102-jdbc41")
	compile group: 'postgresql', name: 'postgresql', version: '9.0-801.jdbc4'
    
    compile('org.projectlombok:lombok:1.16.6')
    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.7'
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.7'
    
	compile('log4j:log4j:1.2.17')
	
	compile('org.hibernate:hibernate-entitymanager:5.1.0.Final')
	compile('org.hibernate:hibernate-java8:5.1.0.Final')
	compile('org.hibernate:hibernate-core:5.1.0.Final')
	compile('org.springframework.boot:spring-boot-starter-actuator')
	
	compile group: 'org.hibernate', name: 'hibernate-envers', version: '5.1.0.Final'
	
	providedRuntime('org.springframework.boot:spring-boot-starter-tomcat')
    compile("org.springframework.boot:spring-boot-starter-web")
    testCompile('org.springframework.boot:spring-boot-starter-test')

}
task downloadDependencies(type: Exec) {
    configurations.testRuntime.files
    commandLine 'echo', 'Downloaded all dependencies'
}

task wrapper(type: Wrapper) {
	gradleVersion = '2.9'
}

task stage(dependsOn: ['build', 'clean'])
build.mustRunAfter clean

task copyToLib(type: Copy) {
    into "$buildDir/lib"
    from(configurations.compile)
}

stage.dependsOn(copyToLib)

